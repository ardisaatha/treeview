// tsup.config.ts
import { defineConfig } from "tsup";
import postcss from "postcss";
import tailwindcss from "tailwindcss";
import autoprefixer from "autoprefixer";
import fs from "fs/promises";
var tsup_config_default = defineConfig({
  entry: ["src/index.ts"],
  splitting: true,
  sourcemap: false,
  clean: true,
  dts: true,
  format: ["esm", "cjs"],
  minify: true,
  target: "es2020",
  external: ["react", "react-dom"],
  async onSuccess() {
    const css = await fs.readFile("src/styles/index.css", "utf-8");
    const result = await postcss([tailwindcss(), autoprefixer()]).process(css, {
      from: "src/components/global.css",
      to: "dist/index.css"
    });
    await fs.writeFile("dist/index.css", result.css);
  }
});
export {
  tsup_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidHN1cC5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9faW5qZWN0ZWRfZmlsZW5hbWVfXyA9IFwiRDpcXFxcYWRtZWRpa2F+XFxcXGNvbXBcXFxcdHJlZXZpZXdcXFxcdHN1cC5jb25maWcudHNcIjtjb25zdCBfX2luamVjdGVkX2Rpcm5hbWVfXyA9IFwiRDpcXFxcYWRtZWRpa2F+XFxcXGNvbXBcXFxcdHJlZXZpZXdcIjtjb25zdCBfX2luamVjdGVkX2ltcG9ydF9tZXRhX3VybF9fID0gXCJmaWxlOi8vL0Q6L2FkbWVkaWthJTdFL2NvbXAvdHJlZXZpZXcvdHN1cC5jb25maWcudHNcIjtpbXBvcnQgeyBkZWZpbmVDb25maWcgfSBmcm9tIFwidHN1cFwiO1xyXG5pbXBvcnQgcG9zdGNzcyBmcm9tIFwicG9zdGNzc1wiO1xyXG5pbXBvcnQgdGFpbHdpbmRjc3MgZnJvbSBcInRhaWx3aW5kY3NzXCI7XHJcbmltcG9ydCBhdXRvcHJlZml4ZXIgZnJvbSBcImF1dG9wcmVmaXhlclwiO1xyXG5pbXBvcnQgZnMgZnJvbSBcImZzL3Byb21pc2VzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoe1xyXG4gIGVudHJ5OiBbXCJzcmMvaW5kZXgudHNcIl0sXHJcbiAgc3BsaXR0aW5nOiB0cnVlLFxyXG4gIHNvdXJjZW1hcDogZmFsc2UsXHJcbiAgY2xlYW46IHRydWUsXHJcbiAgZHRzOiB0cnVlLFxyXG4gIGZvcm1hdDogW1wiZXNtXCIsIFwiY2pzXCJdLFxyXG4gIG1pbmlmeTogdHJ1ZSxcclxuICB0YXJnZXQ6IFwiZXMyMDIwXCIsXHJcbiAgZXh0ZXJuYWw6IFtcInJlYWN0XCIsIFwicmVhY3QtZG9tXCJdLFxyXG4gIGFzeW5jIG9uU3VjY2VzcygpIHtcclxuICAgIC8vIGJhY2EgZ2xvYmFsLmNzc1xyXG4gICAgY29uc3QgY3NzID0gYXdhaXQgZnMucmVhZEZpbGUoXCJzcmMvc3R5bGVzL2luZGV4LmNzc1wiLCBcInV0Zi04XCIpO1xyXG5cclxuICAgIC8vIHByb3NlcyBkZW5nYW4gcG9zdGNzcyArIHRhaWx3aW5kICsgYXV0b3ByZWZpeGVyXHJcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBwb3N0Y3NzKFt0YWlsd2luZGNzcygpLCBhdXRvcHJlZml4ZXIoKV0pLnByb2Nlc3MoY3NzLCB7XHJcbiAgICAgIGZyb206IFwic3JjL2NvbXBvbmVudHMvZ2xvYmFsLmNzc1wiLFxyXG4gICAgICB0bzogXCJkaXN0L2luZGV4LmNzc1wiLFxyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gdHVsaXMgaGFzaWwgQ1NTXHJcbiAgICBhd2FpdCBmcy53cml0ZUZpbGUoXCJkaXN0L2luZGV4LmNzc1wiLCByZXN1bHQuY3NzKTtcclxuICB9LFxyXG59KTtcclxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFzTyxTQUFTLG9CQUFvQjtBQUNuUSxPQUFPLGFBQWE7QUFDcEIsT0FBTyxpQkFBaUI7QUFDeEIsT0FBTyxrQkFBa0I7QUFDekIsT0FBTyxRQUFRO0FBRWYsSUFBTyxzQkFBUSxhQUFhO0FBQUEsRUFDMUIsT0FBTyxDQUFDLGNBQWM7QUFBQSxFQUN0QixXQUFXO0FBQUEsRUFDWCxXQUFXO0FBQUEsRUFDWCxPQUFPO0FBQUEsRUFDUCxLQUFLO0FBQUEsRUFDTCxRQUFRLENBQUMsT0FBTyxLQUFLO0FBQUEsRUFDckIsUUFBUTtBQUFBLEVBQ1IsUUFBUTtBQUFBLEVBQ1IsVUFBVSxDQUFDLFNBQVMsV0FBVztBQUFBLEVBQy9CLE1BQU0sWUFBWTtBQUVoQixVQUFNLE1BQU0sTUFBTSxHQUFHLFNBQVMsd0JBQXdCLE9BQU87QUFHN0QsVUFBTSxTQUFTLE1BQU0sUUFBUSxDQUFDLFlBQVksR0FBRyxhQUFhLENBQUMsQ0FBQyxFQUFFLFFBQVEsS0FBSztBQUFBLE1BQ3pFLE1BQU07QUFBQSxNQUNOLElBQUk7QUFBQSxJQUNOLENBQUM7QUFHRCxVQUFNLEdBQUcsVUFBVSxrQkFBa0IsT0FBTyxHQUFHO0FBQUEsRUFDakQ7QUFDRixDQUFDOyIsCiAgIm5hbWVzIjogW10KfQo=
